{"ast":null,"code":"var _jsxFileName = \"/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction SubTitle({\n  isTimerRunning,\n  handleStop,\n  disableButton,\n  breakDuration,\n  focusSessionActive,\n  focusDuration,\n  sessionCountdown,\n  handlePlayPauseClick,\n  ariaValue\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      \"row mb-2\": sessionActive,\n      \"d-none\": !sessionActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, sessionActive && /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, focusSessionActive ? \"Focusing\" : \"On Break\", \" for\", \" \", focusSessionActive ? `${minutesToDuration(focusDuration)}` : `${minutesToDuration(breakDuration)}`, \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`, \" \", \"remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      progress: sessionActive,\n      \"d-none\": !sessionActive\n    }),\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": ariaValue // Completed: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${ariaValue}%`\n    } // Completed: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default SubTitle;","map":{"version":3,"sources":["/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js"],"names":["React","minutesToDuration","secondsToDuration","SubTitle","isTimerRunning","handleStop","disableButton","breakDuration","focusSessionActive","focusDuration","sessionCountdown","handlePlayPauseClick","ariaValue","classNames","sessionActive","progress","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;;AAEA,SAASC,QAAT,CAAkB;AAClBC,EAAAA,cADkB;AAElBC,EAAAA,UAFkB;AAGlBC,EAAAA,aAHkB;AAIlBC,EAAAA,aAJkB;AAKlBC,EAAAA,kBALkB;AAMlBC,EAAAA,aANkB;AAOlBC,EAAAA,gBAPkB;AAQlBC,EAAAA,oBARkB;AASlBC,EAAAA;AATkB,CAAlB,EAUG;AAEH,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AACM,IAAA,SAAS,EAAEC,UAAU,CAAC;AACpB,kBAAYC,aADQ;AAEpB,gBAAU,CAACA;AAFS,KAAD,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGA,aAAa,iBACR;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,kBAAkB,GAAG,UAAH,GAAgB,UADrC,UACqD,GADrD,EAEGA,kBAAkB,GACd,GAAEP,iBAAiB,CAACQ,aAAD,CAAgB,EADrB,GAEd,GAAER,iBAAiB,CAACM,aAAD,CAAgB,EAJ1C,EAI6C,GAJ7C,YAJR,eAaI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,kBAAkB,GAAI,GAAEN,iBAAiB,CAACO,aAAa,GAAG,EAAhB,GAAqBC,gBAAtB,CAAwC,EAA/D,GAAoE,GAAER,iBAAiB,CAACK,aAAa,GAAG,EAAhB,GAAqBG,gBAAtB,CAAwC,EADtJ,EACyJ,GADzJ,cAbJ,CANF,CAFA,eA2BI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,SAAS,EAAEG,UAAU,CAAC;AACpBE,MAAAA,QAAQ,EAAED,aADU;AAEpB,gBAAU,CAACA;AAFS,KAAD,CADvB;AAKE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeJ,SALjB,CAK4B;AAL5B;AAME,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAG,GAAEL,SAAU;AAAtB,KANT,CAMqC;AANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF,CA3BJ,CADJ;AAkDQ;;AAER,eAAeT,QAAf","sourcesContent":["import React from \"react\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\n\nfunction SubTitle({\nisTimerRunning,\nhandleStop,\ndisableButton,\nbreakDuration,\nfocusSessionActive,\nfocusDuration,\nsessionCountdown,\nhandlePlayPauseClick,\nariaValue\n}) {\n\nreturn(\n    <div>\n    {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n    <div\n          className={classNames({\n            \"row mb-2\": sessionActive,\n            \"d-none\": !sessionActive,\n          })}\n        >\n      <div className=\"col\">\n\n        {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n        {sessionActive && (\n              <h2 data-testid=\"session-title\">\n                {focusSessionActive ? \"Focusing\" : \"On Break\"} for{\" \"}\n                {focusSessionActive\n                  ? `${minutesToDuration(focusDuration)}`\n                  : `${minutesToDuration(breakDuration)}`}{\" \"}\n                minutes\n             </h2>\n              )}\n          {/* Completed: Update message below to include time remaining in the current session */}\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n              {focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`}{\" \"}\n              remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* Progress bar only displays when session is active*/}\n            <div\n              className={classNames({\n                progress: sessionActive,\n                \"d-none\": !sessionActive,\n              })}\n              style={{ height: \"20px\" }}\n            >\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={ariaValue} // Completed: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${ariaValue}%` }} // Completed: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      )}\n\nexport default SubTitle;\n"]},"metadata":{},"sourceType":"module"}