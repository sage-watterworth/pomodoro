{"ast":null,"code":"var _jsxFileName = \"/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js\";\nimport React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Subtitle({\n  aria,\n  breakDuration,\n  focusDuration,\n  session,\n  isTimerRunning\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, session && session.label, \" for \", minutesToDuration(\"0\" + (session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, session && secondsToDuration(session.timeRemaining), \" remaining\"), isTimerRunning ? \"\" : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 44\n    }\n  }, \"PAUSED\"))), session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": aria // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${aria}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })))));\n}\n\nexport default Subtitle;","map":{"version":3,"sources":["/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js"],"names":["React","minutesToDuration","secondsToDuration","Subtitle","aria","breakDuration","focusDuration","session","isTimerRunning","label","toLowerCase","indexOf","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,aAAR;AAAuBC,EAAAA,aAAvB;AAAsCC,EAAAA,OAAtC;AAA+CC,EAAAA;AAA/C,CAAlB,EAAmF;AAC/E,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,OAAO,iBAAK;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACT;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,OAAO,IAAIA,OAAO,CAACE,KADpB,WACgCR,iBAAiB,CAAC,OAAOM,OAAO,CAACE,KAAR,CAAcC,WAAd,GAA4BC,OAA5B,CAAoC,MAApC,IAA8C,CAA9C,GAAkDL,aAAlD,GAAkED,aAAzE,CAAD,CADjD,aAFJ,eAMI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,OAAO,IAAIL,iBAAiB,CAACK,OAAO,CAACK,aAAT,CAD7B,eANJ,EAUKJ,cAAc,GAAG,EAAH,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAV3B,CADS,CAFjB,EAgBKD,OAAO,iBAAI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,qBAAc,GAHlB;AAII,qBAAc,KAJlB;AAKI,qBAAeT,IALnB,CAKyB;AALzB;AAMI,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAG,GAAEV,IAAK;AAAjB,KANX,CAMkC;AANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CADQ,CAhBhB,CADJ;AAiCH;;AAED,eAAeD,QAAf","sourcesContent":["import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Subtitle({ aria, breakDuration, focusDuration, session, isTimerRunning }) {\n    return (\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n            {session && (<div className=\"row mb-2\">\n                <div className=\"col\">\n                    {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n                    <h2 data-testid=\"session-title\">\n                    {session && session.label} for {minutesToDuration(\"0\" + (session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration))} minutes\n                    </h2>\n                    {/* TODO: Update message below correctly format the time remaining in the current session */}\n                    <p className=\"lead\" data-testid=\"session-sub-title\">\n                    {session && secondsToDuration(session.timeRemaining)} remaining\n                    {/* Onclick handler for focus time should also reset time remaining to the new \"focus\" time */}\n                    </p>\n                    {isTimerRunning ? \"\" : <h2>PAUSED</h2>}\n                </div>\n            </div>)}\n            {session && <div className=\"row mb-2\">\n                <div className=\"col\">\n                    <div className=\"progress\" style={{ height: \"20px\" }}>\n                    <div\n                        className=\"progress-bar\"\n                        role=\"progressbar\"\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                        aria-valuenow={aria} // TODO: Increase aria-valuenow as elapsed time increases\n                        style={{ width: `${aria}%` }} // TODO: Increase width % as elapsed time increases\n                    />\n                    </div>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default Subtitle;\n"]},"metadata":{},"sourceType":"module"}