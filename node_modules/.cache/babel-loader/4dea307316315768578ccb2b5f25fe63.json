{"ast":null,"code":"var _jsxFileName = \"/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/PlayPause.js\";\nimport React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Pomodoro from \"./Pomodoro.js\";\n\nfunction PlayPause({\n  isTimerRunning,\n  handleStop,\n  disableButton,\n  breakDuration,\n  focusSessionActive,\n  focusDuration,\n  sessionCountdown,\n  handlePlayPauseClick\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: handlePlayPauseClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: handleStop,\n    disabled: disableButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, focusSessionActive ? \"Focusing\" : \"On Break\", \" for\", focusSessionActive ? `${minutesToDuration(focusDuration)}` : `${minutesToDuration(breakDuration)}`, \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`, \" \", \"remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": ariaValue // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: ariaValue\n    } // Completed: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nexport default PlayPause;","map":{"version":3,"sources":["/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/PlayPause.js"],"names":["React","classNames","minutesToDuration","secondsToDuration","Pomodoro","PlayPause","isTimerRunning","handleStop","disableButton","breakDuration","focusSessionActive","focusDuration","sessionCountdown","handlePlayPauseClick","oi","height","ariaValue","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\nimport Pomodoro from \"./Pomodoro.js\";\n\n\nfunction PlayPause({\nisTimerRunning,\nhandleStop,\ndisableButton,\nbreakDuration,\nfocusSessionActive,\nfocusDuration,\nsessionCountdown,\nhandlePlayPauseClick\n}) {\n\nreturn(\n<div>\n<div className=\"row\">\n<div className=\"col\">\n  <div\n    className=\"btn-group btn-group-lg mb-2\"\n    role=\"group\"\n    aria-label=\"Timer controls\"\n  >\n    <button\n      type=\"button\"\n      className=\"btn btn-primary\"\n      data-testid=\"play-pause\"\n      title=\"Start or pause timer\"\n      onClick={handlePlayPauseClick()}\n    >\n      <span\n        className={classNames({\n          oi: true,\n          \"oi-media-play\": !isTimerRunning,\n          \"oi-media-pause\": isTimerRunning,\n        })}\n      />\n    </button>\n    {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n    {/* TODO: Disable the stop button when there is no active session */}\n    <button\n      type=\"button\"\n      className=\"btn btn-secondary\"\n      data-testid=\"stop\"\n      title=\"Stop the session\"\n      onClick={handleStop}\n      disabled={disableButton}\n    >\n      <span className=\"oi oi-media-stop\" />\n    </button>\n  </div>\n</div>\n</div>\n\n\n<div>\n{/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n<div className=\"row mb-2\">\n  <div className=\"col\">\n    {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n    <h2 data-testid=\"session-title\">\n        {focusSessionActive ? \"Focusing\" : \"On Break\"} for\n        {focusSessionActive\n          ? `${minutesToDuration(focusDuration)}`\n          : `${minutesToDuration(breakDuration)}`}\n      minutes\n    </h2>\n    {/* TODO: Update message below correctly format the time remaining in the current session */}\n    <p className=\"lead\" data-testid=\"session-sub-title\">\n        {focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`}{\" \"}\n      remaining\n    </p>\n  </div>\n</div>\n<div className=\"row mb-2\">\n  <div className=\"col\">\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={ariaValue}  // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: ariaValue }} // Completed: Increase width % as elapsed time increases\n            />\n        </div>\n  </div>\n</div>\n</div>\n</div>\n\n);\n}\nexport default PlayPause;\n"]},"metadata":{},"sourceType":"module"}