{"ast":null,"code":"var _jsxFileName = \"/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js\";\nimport React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction SubTitle({\n  ariaValue,\n  breakDuration,\n  focusDuration,\n  session,\n  isTimerRunning\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, focusSessionActive ? \"Focusing\" : \"On Break\", \" for\", \" \", focusSessionActive ? `${minutesToDuration(focusDuration)}` : `${minutesToDuration(breakDuration)}`, \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`, \" \", \"remaining\"), isTimerRunning ? \"\" : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 44\n    }\n  }, \"PAUSED\"))), session && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": ariaValue,\n    style: {\n      width: `${ariaValue}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })))));\n}\n\nexport default SubTitle;","map":{"version":3,"sources":["/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js"],"names":["React","classNames","minutesToDuration","secondsToDuration","SubTitle","ariaValue","breakDuration","focusDuration","session","isTimerRunning","focusSessionActive","sessionCountdown","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAGA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,aAAb;AAA4BC,EAAAA,aAA5B;AAA2CC,EAAAA,OAA3C;AAAoDC,EAAAA;AAApD,CAAlB,EAAwF;AACpF,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,OAAO,iBAAK;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACT;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,kBAAkB,GAAG,UAAH,GAAgB,UADnC,UACmD,GADnD,EAEHA,kBAAkB,GACd,GAAER,iBAAiB,CAACK,aAAD,CAAgB,EADrB,GAEd,GAAEL,iBAAiB,CAACI,aAAD,CAAgB,EAJpC,EAIuC,GAJvC,YAFJ,eASI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,kBAAkB,GAAI,GAAEP,iBAAiB,CAACI,aAAa,GAAG,EAAhB,GAAqBI,gBAAtB,CAAwC,EAA/D,GAAoE,GAAER,iBAAiB,CAACG,aAAa,GAAG,EAAhB,GAAqBK,gBAAtB,CAAwC,EADlJ,EACqJ,GADrJ,cATJ,EAaKF,cAAc,GAAG,EAAH,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAb3B,CADS,CAFjB,EAmBKD,OAAO,iBAAI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,qBAAc,GAHlB;AAII,qBAAc,KAJlB;AAKI,qBAAeP,SALnB;AAMF,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAG,GAAER,SAAU;AAAtB,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CADQ,CAnBhB,CADJ;AAoCH;;AAED,eAAeD,QAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\n\nfunction SubTitle({ ariaValue, breakDuration, focusDuration, session, isTimerRunning }) {\n    return (\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n            {session && (<div className=\"row mb-2\">\n                <div className=\"col\">\n                    {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n                    <h2 data-testid=\"session-title\">\n                    {focusSessionActive ? \"Focusing\" : \"On Break\"} for{\" \"}\n                {focusSessionActive\n                  ? `${minutesToDuration(focusDuration)}`\n                  : `${minutesToDuration(breakDuration)}`}{\" \"}\n                minutes\n                    </h2>\n                    <p className=\"lead\" data-testid=\"session-sub-title\">\n                    {focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`}{\" \"}\n              remaining\n                    </p>\n                    {isTimerRunning ? \"\" : <h2>PAUSED</h2>}\n                </div>\n            </div>)}\n            {session && <div className=\"row mb-2\">\n                <div className=\"col\">\n                    <div className=\"progress\" style={{ height: \"20px\" }}>\n                    <div\n                        className=\"progress-bar\"\n                        role=\"progressbar\"\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                        aria-valuenow={ariaValue}\n                \t\tstyle={{ width: `${ariaValue}%` }}\n                    />\n                    </div>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default SubTitle;\n"]},"metadata":{},"sourceType":"module"}