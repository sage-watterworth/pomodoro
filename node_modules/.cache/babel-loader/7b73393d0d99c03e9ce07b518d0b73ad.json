{"ast":null,"code":"var _jsxFileName = \"/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js\";\nimport React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction SubTitle({\n  ariaValue,\n  breakDuration,\n  focusDuration,\n  sessionActive,\n  focusSessionActive,\n  sessionCountdown\n}) {\n  var _session;\n\n  const percent = (currentTimer * 60 - ((_session = session) === null || _session === void 0 ? void 0 : _session.timeRemaining)) / (currentTimer * 60) * 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      \"row mb-2\": sessionActive //\"d-none\": !sessionActive,\n\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 18\n    }\n  }, sessionActive && /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, !focusSessionActive ? \"Focusing\" : \"On Break\", \" for\", \" \", !focusSessionActive ? `${minutesToDuration(focusDuration)}` : `${minutesToDuration(breakDuration)}`, \" \", \"minutes\"), sessionActive && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, !focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`, \" \", \"remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      progress: sessionActive //\"d-none\": !sessionActive,\n\n    }),\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${percent}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default SubTitle;","map":{"version":3,"sources":["/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SubTitle.js"],"names":["React","classNames","minutesToDuration","secondsToDuration","SubTitle","ariaValue","breakDuration","focusDuration","sessionActive","focusSessionActive","sessionCountdown","percent","currentTimer","session","timeRemaining","progress","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,aAAb;AAA4BC,EAAAA,aAA5B;AAA2CC,EAAAA,aAA3C;AAA0DC,EAAAA,kBAA1D;AAA8EC,EAAAA;AAA9E,CAAlB,EAAoH;AAAA;;AAClH,QAAMC,OAAO,GAAI,CAACC,YAAY,GAAG,EAAf,gBAAoBC,OAApB,6CAAoB,SAASC,aAA7B,CAAD,KAAgDF,YAAY,GAAG,EAA/D,CAAD,GAAuE,GAAvF;AACE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAEX,UAAU,CAAC;AACvB,kBAAWO,aADY,CAEvB;;AAFuB,KAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKK;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJA,aAAa,iBACZ;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,kBAAD,GAAsB,UAAtB,GAAmC,UADtC,UACsD,GADtD,EAEG,CAACA,kBAAD,GACI,GAAEP,iBAAiB,CAACK,aAAD,CAAgB,EADvC,GAEI,GAAEL,iBAAiB,CAACI,aAAD,CAAgB,EAJ1C,EAI6C,GAJ7C,YAHG,EAYJE,aAAa,iBACd;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,kBAAD,GAAuB,GAAEN,iBAAiB,CAACI,aAAa,GAAG,EAAhB,GAAqBG,gBAAtB,CAAwC,EAAlF,GAAuF,GAAEP,iBAAiB,CAACG,aAAa,GAAG,EAAhB,GAAqBI,gBAAtB,CAAwC,EADrJ,EACwJ,GADxJ,cAbK,CALL,CAFJ,eA2BA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,SAAS,EAAET,UAAU,CAAC;AACpBc,MAAAA,QAAQ,EAAEP,aADU,CAEpB;;AAFoB,KAAD,CADvB;AAKE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeL,OALjB,CAK0B;AAL1B;AAMC,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAG,GAAEN,OAAQ;AAAnB,KANR,CAMgC;AANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF,CA3BA,CADJ;AAmDH;;AAED,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction SubTitle({ ariaValue, breakDuration, focusDuration, sessionActive, focusSessionActive, sessionCountdown }) {\n  const percent = ((currentTimer * 60 - session?.timeRemaining) / (currentTimer * 60)) * 100\n    return (\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n            <div className={classNames({\n                \"row mb-2\":sessionActive,\n                //\"d-none\": !sessionActive,\n            })}\n            >\n                 <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            {sessionActive && (\n              <h2 data-testid=\"session-title\">\n                {!focusSessionActive ? \"Focusing\" : \"On Break\"} for{\" \"}\n                {!focusSessionActive\n                  ? `${minutesToDuration(focusDuration)}`\n                  : `${minutesToDuration(breakDuration)}`}{\" \"}\n                minutes\n              </h2>\n            )}\n            {/* TODO: Update message below to include time remaining in the current session */}\n            {sessionActive &&\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {!focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`}{\" \"}\n              remaining\n            </p>\n            }\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Display when session is active*/}\n            <div\n              className={classNames({\n                progress: sessionActive,\n                //\"d-none\": !sessionActive,\n              })}\n              style={{ height: \"20px\" }}\n            >\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={percent} // TODO: Increase aria-valuenow as elapsed time increases\n               style={{width: `${percent}%`}} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n}\n\nexport default SubTitle;\n"]},"metadata":{},"sourceType":"module"}