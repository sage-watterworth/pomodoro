{"ast":null,"code":"var _jsxFileName = \"/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Focus.js\";\nimport React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function Focus({\n  sessionActive,\n  focusDuration,\n  focusSessionActive,\n  breakDuration,\n  sessionCountdown,\n  ariaValue\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      \"row mb-2\": sessionActive,\n      \"d-none\": !sessionActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, sessionActive && /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, focusSessionActive ? \"Focusing\" : \"On Break\", \" for\", \" \", focusSessionActive ? `${minutesToDuration(focusDuration)}` : `${minutesToDuration(breakDuration)}`, \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`, \" \", \"remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      progress: sessionActive,\n      \"d-none\": !sessionActive\n    }),\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": ariaValue // Completed: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${ariaValue}%`\n    } // Completed: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })))));\n}\n;","map":{"version":3,"sources":["/Users/sagewatterworth/Desktop/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Focus.js"],"names":["React","classNames","minutesToDuration","secondsToDuration","Focus","sessionActive","focusDuration","focusSessionActive","breakDuration","sessionCountdown","ariaValue","progress","height","width"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AAEA,eAAe,SAASC,KAAT,CAAe;AAC1BC,EAAAA,aAD0B;AAE1BC,EAAAA,aAF0B;AAG1BC,EAAAA,kBAH0B;AAI1BC,EAAAA,aAJ0B;AAK1BC,EAAAA,gBAL0B;AAM1BC,EAAAA;AAN0B,CAAf,EAOR;AACP,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEJ;AACE,IAAA,SAAS,EAAET,UAAU,CAAC;AACpB,kBAAYI,aADQ;AAEpB,gBAAU,CAACA;AAFS,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGA,aAAa,iBACZ;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,kBAAkB,GAAG,UAAH,GAAgB,UADrC,UACqD,GADrD,EAEGA,kBAAkB,GACd,GAAEL,iBAAiB,CAACI,aAAD,CAAgB,EADrB,GAEd,GAAEJ,iBAAiB,CAACM,aAAD,CAAgB,EAJ1C,EAI6C,GAJ7C,YAHJ,eAYE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,kBAAkB,GAAI,GAAEJ,iBAAiB,CAACG,aAAa,GAAG,EAAhB,GAAqBG,gBAAtB,CAAwC,EAA/D,GAAoE,GAAEN,iBAAiB,CAACK,aAAa,GAAG,EAAhB,GAAqBC,gBAAtB,CAAwC,EADpJ,EACuJ,GADvJ,cAZF,CANF,CAFI,eA0BJ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,SAAS,EAAER,UAAU,CAAC;AACpBU,MAAAA,QAAQ,EAAEN,aADU;AAEpB,gBAAU,CAACA;AAFS,KAAD,CADvB;AAKE,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeF,SALjB,CAK4B;AAL5B;AAME,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAG,GAAEH,SAAU;AAAtB,KANT,CAMqC;AANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF,CA1BI,CAAR;AAgDI;AAAA","sourcesContent":["\nimport React from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nexport default function Focus({\n    sessionActive,\n    focusDuration,\n    focusSessionActive,\n    breakDuration,\n    sessionCountdown,\n    ariaValue\n    }) {\nreturn (<div>\n    {/* Completed: This area should show only when a focus or break session is running or pauses */}\n    <div\n      className={classNames({\n        \"row mb-2\": sessionActive,\n        \"d-none\": !sessionActive,\n      })}\n    >\n      <div className=\"col\">\n        {/* Completed: Update message below to include current session (Focusing or On Break) and total duration */}\n        {sessionActive && (\n          <h2 data-testid=\"session-title\">\n            {focusSessionActive ? \"Focusing\" : \"On Break\"} for{\" \"}\n            {focusSessionActive\n              ? `${minutesToDuration(focusDuration)}`\n              : `${minutesToDuration(breakDuration)}`}{\" \"}\n            minutes\n          </h2>\n        )}\n        {/* Completed: Update message below to include time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n          {focusSessionActive ? `${secondsToDuration(focusDuration * 60 - sessionCountdown)}` : `${secondsToDuration(breakDuration * 60 - sessionCountdown)}`}{\" \"}\n          remaining\n        </p>\n      </div>\n    </div>\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        {/* Progress bar only displays when session is active*/}\n        <div\n          className={classNames({\n            progress: sessionActive,\n            \"d-none\": !sessionActive,\n          })}\n          style={{ height: \"20px\" }}\n        >\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-valuenow={ariaValue} // Completed: Increase aria-valuenow as elapsed time increases\n            style={{ width: `${ariaValue}%` }} // Completed: Increase width % as elapsed time increases\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n  )};\n"]},"metadata":{},"sourceType":"module"}